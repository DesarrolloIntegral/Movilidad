@using Microsoft.AspNetCore.Components.Forms
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Nombre :</label>
        <div>
            <InputText class="form-control" @bind-Value="@Tarifa.Nombre" @oninput="EventCallback.Factory.CreateBinder<string>(this, __value => Tarifa.Nombre = __value?.ToUpper(), Tarifa.Nombre?.ToUpper())" />
            <ValidationMessage For="@(() => Tarifa.Nombre)" />
        </div>
        <label>Fecha de Inicio :</label>
        <div>
            <InputDate @bind-Value="@Tarifa.FechaInicio" />
            <ValidationMessage For="@(() => Tarifa.FechaInicio)" />
        </div>
        <label>Fecha de Fin :</label>
        <div>
            <InputDate @bind-Value="@Tarifa.FechaFin" />
            <ValidationMessage For="@(() => Tarifa.FechaFin)" />
        </div>
        <label>Linea :</label>
        <div>
            <select @bind="Tarifa.LineaId">
                <option value=0>Seleccione Linea...</option>
                @if (Lineas != null)
                {
                    @foreach (var lin in Lineas)
                    {
                        <option value="@lin.Id">@lin.Nombre</option>
                    }
                }
            </select>
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar Cambios</button>
    <button class="btn btn-primary" type="button" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {
    public List<Linea>? Lineas { get; set; }

    private EditContext editContext = null!;

    [EditorRequired]
    [Parameter]
    public Tarifa Tarifa { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Tarifa.Id == 0)
        {
            Tarifa.FechaInicio = DateTime.Now.Date;
            Tarifa.FechaFin = DateTime.Now.Date;
        }
        editContext = new(Tarifa);
        await LoadAsync();
    }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task LoadAsync()
    {
        string url = $"api/lineas/sinfiltro";

        var responseHppt = await repository.Get<List<Linea>>(url);
        Lineas = responseHppt.Response!;
    }
}