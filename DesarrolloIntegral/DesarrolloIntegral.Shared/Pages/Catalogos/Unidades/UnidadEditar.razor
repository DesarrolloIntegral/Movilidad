@page "/unidades/editar/{Id:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService


<h3>Editar Unidad</h3>

@if (unidad is null)
{
    <p>Cargando...</p>
}
else
{
    <UnidadForm @ref="unidadForm" Unidad="unidad" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private Unidad? unidad;
    private UnidadForm? unidadForm;

    private Unidad unidadHistorial = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHTTP = await repository.Get<Unidad>($"api/unidades/{Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("unidades");
                return;
            }

            var messageError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
            return;
        }

        unidad = responseHTTP.Response;
    }

    private async Task EditAsync()
    {
        var responseHTTP = await repository.Get<Unidad>($"api/unidades/{Id}/0");
        unidadHistorial = responseHTTP.Response!;

        if (unidadHistorial == null)
        {
            unidad!.IdHistorial = 1;
        }
        else
        {
            unidad!.IdHistorial = unidadHistorial.IdHistorial + 1;
        }

        var responseHTTP2 = await repository.Put("api/unidades", unidad);

        if (responseHTTP2.Error)
        {
            var mensajeError = await responseHTTP2.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            return;
        }

        if (unidadHistorial != null)
        {
            unidadHistorial.Estado = 0;
            var responseHTTP3 = await repository.Put("api/unidades", unidadHistorial);

            if (responseHTTP3.Error)
            {
                var mensajeError = await responseHTTP3.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
                return;
            }
        }

        Return();
    }

    private void Return()
    {
        unidadForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/unidades");
    }
}
