@page "/unidadOperador/crear"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>Crear Punto Recorrido</h3>
<UnidadOperadorForm @ref="unidadoperadorForm" unidadOperador="unidadoperador" OnValidSubmit="Crear" ReturnAction="Return" />

@code {
    private UnidadOperador unidadoperador = new();
    private UnidadOperadorForm? unidadoperadorForm;

    private async Task Crear()
    {
        var responseHttp = await repository.Post("/api/unidadOperadores", unidadoperador);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        unidadoperadorForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/unidadOperador");
    }
}
